//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IndiaLance
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class MyDatabase1Entities : DbContext
    {
        public MyDatabase1Entities()
            : base("name=MyDatabase1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<DataEntry> DataEntries { get; set; }
        public DbSet<DesignMedia> DesignMedias { get; set; }
        public DbSet<Engg> Enggs { get; set; }
        public DbSet<ITTech> ITTeches { get; set; }
        public DbSet<ITTechDetail> ITTechDetails { get; set; }
        public DbSet<Projects1> Projects1 { get; set; }
        public DbSet<tbl_Conversation> tbl_Conversation { get; set; }
        public DbSet<tbl_User> tbl_User { get; set; }
    
        public virtual int InsertRecordJava(Nullable<int> projectId, Nullable<int> amount, string details, string isAvail, Nullable<int> ittype)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            var isAvailParameter = isAvail != null ?
                new ObjectParameter("IsAvail", isAvail) :
                new ObjectParameter("IsAvail", typeof(string));
    
            var ittypeParameter = ittype.HasValue ?
                new ObjectParameter("ittype", ittype) :
                new ObjectParameter("ittype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRecordJava", projectIdParameter, amountParameter, detailsParameter, isAvailParameter, ittypeParameter);
        }
    }
}
